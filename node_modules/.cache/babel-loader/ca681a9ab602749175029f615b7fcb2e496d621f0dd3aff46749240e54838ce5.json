{"ast":null,"code":"var _jsxFileName = \"/Users/vighnesh/Documents/Projects/stock-average-calculator/src/components/AveragePrice.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvgWrapper = styled.div`\n  margin: 20px;\n`;\n_c = AvgWrapper;\nconst AveragePrice = ({\n  stocks\n}) => {\n  const calculateAverage = () => {\n    const totalQuantity = stocks.reduce((sum, stock) => sum + stock.quantity, 0);\n    const totalValue = stocks.reduce((sum, stock) => sum + stock.price * stock.quantity, 0);\n    return totalQuantity === 0 ? 0 : (totalValue / totalQuantity).toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(AvgWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Average Stock Price: $\", calculateAverage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c2 = AveragePrice;\nexport default AveragePrice;\nvar _c, _c2;\n$RefreshReg$(_c, \"AvgWrapper\");\n$RefreshReg$(_c2, \"AveragePrice\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","AvgWrapper","div","_c","AveragePrice","stocks","calculateAverage","totalQuantity","reduce","sum","stock","quantity","totalValue","price","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/vighnesh/Documents/Projects/stock-average-calculator/src/components/AveragePrice.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst AvgWrapper = styled.div`\n  margin: 20px;\n`;\n\nconst AveragePrice = ({ stocks }) => {\n  const calculateAverage = () => {\n    const totalQuantity = stocks.reduce(\n      (sum, stock) => sum + stock.quantity,\n      0\n    );\n    const totalValue = stocks.reduce(\n      (sum, stock) => sum + stock.price * stock.quantity,\n      0\n    );\n    return totalQuantity === 0 ? 0 : (totalValue / totalQuantity).toFixed(2);\n  };\n\n  return (\n    <AvgWrapper>\n      <h3>Average Stock Price: ${calculateAverage()}</h3>\n    </AvgWrapper>\n  );\n};\n\nexport default AveragePrice;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGH,MAAM,CAACI,GAAG;AAC7B;AACA,CAAC;AAACC,EAAA,GAFIF,UAAU;AAIhB,MAAMG,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACnC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,aAAa,GAAGF,MAAM,CAACG,MAAM,CACjC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,QAAQ,EACpC,CACF,CAAC;IACD,MAAMC,UAAU,GAAGP,MAAM,CAACG,MAAM,CAC9B,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACC,QAAQ,EAClD,CACF,CAAC;IACD,OAAOJ,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAACK,UAAU,GAAGL,aAAa,EAAEO,OAAO,CAAC,CAAC,CAAC;EAC1E,CAAC;EAED,oBACEd,OAAA,CAACC,UAAU;IAAAc,QAAA,eACTf,OAAA;MAAAe,QAAA,GAAI,wBAAsB,EAACT,gBAAgB,CAAC,CAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEjB,CAAC;AAACC,GAAA,GAlBIhB,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}