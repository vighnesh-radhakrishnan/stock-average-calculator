{"ast":null,"code":"var _jsxFileName = \"/Users/vighnesh/Documents/Projects/stock-average-calculator/src/components/AveragePrice.js\";\n// src/components/AveragePrice.js\nimport React from \"react\";\nimport { AveragePriceWrapper } from \"./Containers\"; // Import the new wrapper\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AveragePrice = ({\n  stocks\n}) => {\n  const calculateAverage = () => {\n    const totalQuantity = stocks.reduce((sum, stock) => sum + stock.quantity, 0);\n    const totalValue = stocks.reduce((sum, stock) => sum + stock.price * stock.quantity, 0);\n    return totalQuantity === 0 ? 0 : (totalValue / totalQuantity).toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(AveragePriceWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Average Stock Price: $\", calculateAverage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = AveragePrice;\nexport default AveragePrice;\nvar _c;\n$RefreshReg$(_c, \"AveragePrice\");","map":{"version":3,"names":["React","AveragePriceWrapper","jsxDEV","_jsxDEV","AveragePrice","stocks","calculateAverage","totalQuantity","reduce","sum","stock","quantity","totalValue","price","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vighnesh/Documents/Projects/stock-average-calculator/src/components/AveragePrice.js"],"sourcesContent":["// src/components/AveragePrice.js\nimport React from \"react\";\nimport { AveragePriceWrapper } from \"./Containers\"; // Import the new wrapper\n\nconst AveragePrice = ({ stocks }) => {\n  const calculateAverage = () => {\n    const totalQuantity = stocks.reduce(\n      (sum, stock) => sum + stock.quantity,\n      0\n    );\n    const totalValue = stocks.reduce(\n      (sum, stock) => sum + stock.price * stock.quantity,\n      0\n    );\n    return totalQuantity === 0 ? 0 : (totalValue / totalQuantity).toFixed(2);\n  };\n\n  return (\n    <AveragePriceWrapper>\n      <h3>Average Stock Price: ${calculateAverage()}</h3>\n    </AveragePriceWrapper>\n  );\n};\n\nexport default AveragePrice;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACnC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,aAAa,GAAGF,MAAM,CAACG,MAAM,CACjC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,QAAQ,EACpC,CACF,CAAC;IACD,MAAMC,UAAU,GAAGP,MAAM,CAACG,MAAM,CAC9B,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACC,QAAQ,EAClD,CACF,CAAC;IACD,OAAOJ,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAACK,UAAU,GAAGL,aAAa,EAAEO,OAAO,CAAC,CAAC,CAAC;EAC1E,CAAC;EAED,oBACEX,OAAA,CAACF,mBAAmB;IAAAc,QAAA,eAClBZ,OAAA;MAAAY,QAAA,GAAI,wBAAsB,EAACT,gBAAgB,CAAC,CAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAE1B,CAAC;AAACC,EAAA,GAlBIhB,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}